from flask import Flask,Blueprint
from flask_restplus import Api,Resource,fields

from marshmallow import fields as ma_fields ,Schema,post_load

app=Flask(__name__)
# blueprint = Blueprint('api',__name__,url_prefix='/api')
# api= Api(blueprint,doc='/documentation')   #doc=False - it will not let the doc. appear.

# app.register_blueprint(blueprint)

api= Api(app)
#app.config['SWAGGER_UI_JSONEDITOR'] = True

class Language(object):
    def __init__(self,Language,framework):
        self.language = language
        self.framework = framework

    def __repr__(self):
        return'{} is the language. {} is the framework.' .format(self.language , self.framework)

class LanguageSchema(Schema):
    language = ma_fields.String()
    framework = ma_fields.String()

    @post_load
    def create_language(self , data):
        return Language(**data)

a_language = api.model('Language',{'language' : fields.String('The language.'),'id': fields.Integer('id')})

languages = []
# python = {'language' : 'python','id': 1}
python = TheLanguage(language = 'python', framework='Flask')
languages.append(python)

@api.route('/language')
class language(Resource):

    # @api.marshal_with(a_language,envelope = 'the data'
    def get(self):
        schema = LanguageSchema()
        return schema.dump(languages)

        # return languages

    @api.expect(a_language)
    def post(self):
        Schema = LanguageSchema()
          
        new_language = Schema.load(api.payload)
        #new_language['id'] = len(languages) + 1
        languages.append(new_language)
        return{'result' : 'Language added'},201



if __name__ =='__main__':
    app.run(debug=True)


_________________________________________________________________________________________________________________________________________

from flask import Flask
from flask_restplus import Api,Resource,fields

app=Flask(__name__)
api= Api(app)

a_language = api.model('Language',{'language' : fields.String('The language.')})

languages = []
python = {'language' : 'python'}
languages.append(python)

@api.route('/language')
class language(Resource):
    def get(self):
        return languages

    @api.expect(a_language)
    def post(self):
        languages.append(api.payload)
        return{'result' : 'Language added'},201



if __name__ =='__main__':
    app.run(debug=True)


-------------------------------------------------------------------------------------------------------------------------------------------

from flask import request
from flask_restplus import Resource

from ..util.dto import StudentDto
from ..service.student_service import save_new_student, get_all_students, get_a_student

api = StudentDto.api
_student = StudentDto.student


@api.route('/')
class StudentList(Resource):
    @api.doc('list_of_Student_users')
    @api.marshal_list_with(_student, envelope='data')
    def get(self):
        """List all registered students"""
        return get_all_students()

    @api.response(201, 'User successfully created.')
    @api.doc('create a new user')
    @api.expect(_student, validate=True)
    def post(self):
        """Creates a new Student User """
        data = request.json
        print(data)
        return save_new_student(data=data)

@api.route('/<public_id>')
@api.param('public_id', 'The User identifier')
@api.response(404, 'User not found.')
class User(Resource):
    @api.doc('get a user')
    @api.marshal_with(_student)
    def get(self, public_id):
        """get a user given its identifier"""
        student = get_a_student(public_id)
        if not student:
            api.abort(404)
        else:
            return student


